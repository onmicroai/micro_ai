name: CI/CD Backend (Development)

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Pull master branch and ensure db and redis are up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/micro_ai
            git pull origin master
            
            # ensure db and redis are up
            docker-compose -p backend -f docker-compose.prod.yml up -d redis
            docker-compose -p backend -f docker-compose.prod.yml up -d db            

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: prepare

    steps:
      - name: Build Frontend
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/micro_ai
            docker-compose -p frontend -f docker-compose.prod.yml build frontend-staging

      - name: Build Web
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/micro_ai
            docker-compose -p backend -f docker-compose.prod.yml build web-staging

      - name: Build Celery
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/micro_ai
            docker-compose -p backend -f docker-compose.prod.yml build celery 

  staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build

    steps:
      - name: Stop Containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            if [ -d "/docker/volumes/micro_ai_staging" ]; then
              cd /docker/volumes/micro_ai_staging
              docker-compose -p backend -f docker-compose.prod.yml down celery
              docker-compose -p backend -f docker-compose.prod.yml down web-staging
              docker-compose -p frontend -f docker-compose.prod.yml down frontend-staging
            else
              echo "Directory /docker/volumes/micro_ai_staging does not exist. Skipping."
            fi

      - name: Rsync Data and Env
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            
            cd /home/ubuntu/micro_ai
            rsync -r --delete ./ /docker/volumes/micro_ai_staging
            
            cd /docker/volumes/micro_ai_staging
            cp -f /opt/secrets/backend-staging.env .env

      - name: Deploy Backend & Frontend
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /docker/volumes/micro_ai
            docker compose -p backend -f docker-compose.prod.yml up -d web-staging celery
            docker-compose -p frontend -f docker-compose.prod.yml up -d frontend-staging