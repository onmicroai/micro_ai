name: CI/CD Frontend (Dev)
# This workflow is triggered by a push to the main branch, and builds the frontend-staging

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Copy .env.template to .env
        run: |
          cp .env.template .env

      - name: Build Docker Image
        run: |
          docker run --rm \
              -v $(pwd):/app \
              -w /app \
              --user $(id -u):$(id -g) \
              node:20-alpine \
              sh -c "yarn install && yarn lint"

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: lint

    steps:
      - name: prepare
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/microai-frontend
            git pull origin main

      - name: build container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/microai-frontend
            docker-compose -p frontend -f docker-compose.prod.yml build frontend-staging

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build

    steps:
      - name: start container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            
            if [ -d "/docker/volumes/frontend-staging" ]; then
               cd /docker/volumes/frontend-staging
               docker-compose -p frontend -f docker-compose.prod.yml down frontend-staging
            else
              echo "Directory /docker/volumes/frontend-staging does not exist. Skipping."
            fi
            
            
            cd /home/ubuntu/microai-frontend
            rsync -r --delete ./ /docker/volumes/frontend-staging
            
            cd /docker/volumes/frontend-staging
            docker-compose -p frontend -f docker-compose.prod.yml up --force-recreate -d frontend-staging

  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: deploy

    steps:
      - name: build container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Pruning unused Docker resources..."
            # Only remove stopped containers
            sudo docker container prune -f
            # Only remove dangling images
            sudo docker image prune -f
            # Never prune volumes automatically
            sudo docker builder prune -f

            # Optional: List unused volumes (but don't remove them automatically)
            echo "Listing unused volumes (for information only):"
            for volume in $(sudo docker volume ls -q); do
               if ! sudo docker ps -a --filter volume=$volume | grep -q .; then
                  echo "Unused volume found: $volume"
               fi
            done